{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFCompleteDemo"
		},
		"AzureSQLLinkedServices_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQLLinkedServices'"
		},
		"BlobLinkedServices_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobLinkedServices'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalSplitDataFlowPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ConditionalSplitDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ConditionalSplitDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-07T17:08:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ConditionalSplitDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFromBlobToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromBlobToSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Sale Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalesId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Sales Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Salesdate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Customer Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Employee Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Store Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "storeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Product Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProdID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "No. Of Units",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NoOfUnitId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Sale Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Sales Reason ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "salesReasonId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Product Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceBlobFactSalesDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetSQLFactSalesDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-07T17:08:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobFactSalesDataset')]",
				"[concat(variables('factoryId'), '/datasets/TargetSQLFactSalesDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EqualNoOfUnitsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Salesdate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProdId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NoOfUnitId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "salesResonId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "equalproduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedServices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MaxNoOfUnitsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Salesdate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProdId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NoOfUnitId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "salesResonId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MaxProductCost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedServices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MinNoOfUnitDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Salesdate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProdId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NoOfUnitId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "salesResonId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MinProductCost"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedServices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobFactSalesDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FactSales.csv",
						"container": "employeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedServices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetSQLFactSalesDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Salesdate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "storeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProdID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NoOfUnitId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SaleAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "salesReasonId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactSalesData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedServices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLLinkedServices')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQLLinkedServices_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobLinkedServices')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobLinkedServices_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalSplitDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TargetSQLFactSalesDataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MaxNoOfUnitsDataset",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "MinNoOfUnitDataset",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "EqualNoOfUnitsDataset",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesId as integer,",
						"          Salesdate as integer,",
						"          CustomerId as integer,",
						"          EmployeeId as integer,",
						"          storeId as integer,",
						"          ProdID as integer,",
						"          NoOfUnitId as integer,",
						"          SaleAmt as decimal(19,4),",
						"          salesReasonId as integer,",
						"          ProductCost as decimal(19,4)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 split(NoOfUnitId > 300,",
						"     NoOfUnitId < 300,",
						"     disjoint: false) ~> split1@(maxNoOfUnits, MinNoOfUnits, EqualNoOfUnits)",
						"split1@maxNoOfUnits sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SalesId as integer,",
						"          Salesdate as integer,",
						"          CustomerId as integer,",
						"          EmployeeId as integer,",
						"          StoreId as integer,",
						"          ProdId as integer,",
						"          NoOfUnitId as integer,",
						"          SalesAmt as decimal(19,4),",
						"          salesResonId as integer,",
						"          ProductCost as decimal(19,4)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"split1@MinNoOfUnits sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SalesId as integer,",
						"          Salesdate as integer,",
						"          CustomerId as integer,",
						"          EmployeeId as integer,",
						"          StoreId as integer,",
						"          ProdId as integer,",
						"          NoOfUnitId as integer,",
						"          SalesAmt as decimal(19,4),",
						"          salesResonId as integer,",
						"          ProductCost as decimal(19,4)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
						"split1@EqualNoOfUnits sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SalesId as integer,",
						"          Salesdate as integer,",
						"          CustomerId as integer,",
						"          EmployeeId as integer,",
						"          StoreId as integer,",
						"          ProdId as integer,",
						"          NoOfUnitId as integer,",
						"          SalesAmt as decimal(19,4),",
						"          salesResonId as integer,",
						"          ProductCost as decimal(19,4)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TargetSQLFactSalesDataset')]",
				"[concat(variables('factoryId'), '/datasets/MaxNoOfUnitsDataset')]",
				"[concat(variables('factoryId'), '/datasets/MinNoOfUnitDataset')]",
				"[concat(variables('factoryId'), '/datasets/EqualNoOfUnitsDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTriggerForCopyActivity')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyDataFromBlobToSQL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-03-07T16:39:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyDataFromBlobToSQL')]"
			]
		}
	]
}